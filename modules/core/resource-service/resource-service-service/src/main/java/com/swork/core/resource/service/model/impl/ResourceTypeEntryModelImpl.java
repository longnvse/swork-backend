/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.swork.core.resource.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.swork.core.resource.service.model.ResourceTypeEntry;
import com.swork.core.resource.service.model.ResourceTypeEntryModel;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the ResourceTypeEntry service. Represents a row in the &quot;SW_ResourceType&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>ResourceTypeEntryModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ResourceTypeEntryImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ResourceTypeEntryImpl
 * @generated
 */
public class ResourceTypeEntryModelImpl
	extends BaseModelImpl<ResourceTypeEntry> implements ResourceTypeEntryModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a resource type entry model instance should use the <code>ResourceTypeEntry</code> interface instead.
	 */
	public static final String TABLE_NAME = "SW_ResourceType";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"externalReferenceCode", Types.VARCHAR},
		{"resourceTypeId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"accountId", Types.BIGINT},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"businessId", Types.BIGINT}, {"modifiedId", Types.BIGINT},
		{"name", Types.VARCHAR}, {"unit", Types.VARCHAR},
		{"parentId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("externalReferenceCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("resourceTypeId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("accountId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("businessId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("unit", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("parentId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table SW_ResourceType (uuid_ VARCHAR(75) null,externalReferenceCode VARCHAR(75) null,resourceTypeId LONG not null primary key,groupId LONG,companyId LONG,accountId LONG,createDate DATE null,modifiedDate DATE null,businessId LONG,modifiedId LONG,name VARCHAR(75) null,unit VARCHAR(75) null,parentId LONG)";

	public static final String TABLE_SQL_DROP = "drop table SW_ResourceType";

	public static final String ORDER_BY_JPQL =
		" ORDER BY resourceTypeEntry.resourceTypeId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY SW_ResourceType.resourceTypeId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long BUSINESSID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long EXTERNALREFERENCECODE_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long NAME_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PARENTID_COLUMN_BITMASK = 32L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 64L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long RESOURCETYPEID_COLUMN_BITMASK = 128L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public ResourceTypeEntryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _resourceTypeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setResourceTypeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _resourceTypeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ResourceTypeEntry.class;
	}

	@Override
	public String getModelClassName() {
		return ResourceTypeEntry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<ResourceTypeEntry, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<ResourceTypeEntry, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ResourceTypeEntry, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((ResourceTypeEntry)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<ResourceTypeEntry, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<ResourceTypeEntry, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(ResourceTypeEntry)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<ResourceTypeEntry, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<ResourceTypeEntry, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, ResourceTypeEntry>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			ResourceTypeEntry.class.getClassLoader(), ResourceTypeEntry.class,
			ModelWrapper.class);

		try {
			Constructor<ResourceTypeEntry> constructor =
				(Constructor<ResourceTypeEntry>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<ResourceTypeEntry, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<ResourceTypeEntry, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<ResourceTypeEntry, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<ResourceTypeEntry, Object>>();
		Map<String, BiConsumer<ResourceTypeEntry, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<ResourceTypeEntry, ?>>();

		attributeGetterFunctions.put("uuid", ResourceTypeEntry::getUuid);
		attributeSetterBiConsumers.put(
			"uuid",
			(BiConsumer<ResourceTypeEntry, String>)ResourceTypeEntry::setUuid);
		attributeGetterFunctions.put(
			"externalReferenceCode",
			ResourceTypeEntry::getExternalReferenceCode);
		attributeSetterBiConsumers.put(
			"externalReferenceCode",
			(BiConsumer<ResourceTypeEntry, String>)
				ResourceTypeEntry::setExternalReferenceCode);
		attributeGetterFunctions.put(
			"resourceTypeId", ResourceTypeEntry::getResourceTypeId);
		attributeSetterBiConsumers.put(
			"resourceTypeId",
			(BiConsumer<ResourceTypeEntry, Long>)
				ResourceTypeEntry::setResourceTypeId);
		attributeGetterFunctions.put("groupId", ResourceTypeEntry::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<ResourceTypeEntry, Long>)ResourceTypeEntry::setGroupId);
		attributeGetterFunctions.put(
			"companyId", ResourceTypeEntry::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<ResourceTypeEntry, Long>)
				ResourceTypeEntry::setCompanyId);
		attributeGetterFunctions.put(
			"accountId", ResourceTypeEntry::getAccountId);
		attributeSetterBiConsumers.put(
			"accountId",
			(BiConsumer<ResourceTypeEntry, Long>)
				ResourceTypeEntry::setAccountId);
		attributeGetterFunctions.put(
			"createDate", ResourceTypeEntry::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<ResourceTypeEntry, Date>)
				ResourceTypeEntry::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", ResourceTypeEntry::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<ResourceTypeEntry, Date>)
				ResourceTypeEntry::setModifiedDate);
		attributeGetterFunctions.put(
			"businessId", ResourceTypeEntry::getBusinessId);
		attributeSetterBiConsumers.put(
			"businessId",
			(BiConsumer<ResourceTypeEntry, Long>)
				ResourceTypeEntry::setBusinessId);
		attributeGetterFunctions.put(
			"modifiedId", ResourceTypeEntry::getModifiedId);
		attributeSetterBiConsumers.put(
			"modifiedId",
			(BiConsumer<ResourceTypeEntry, Long>)
				ResourceTypeEntry::setModifiedId);
		attributeGetterFunctions.put("name", ResourceTypeEntry::getName);
		attributeSetterBiConsumers.put(
			"name",
			(BiConsumer<ResourceTypeEntry, String>)ResourceTypeEntry::setName);
		attributeGetterFunctions.put("unit", ResourceTypeEntry::getUnit);
		attributeSetterBiConsumers.put(
			"unit",
			(BiConsumer<ResourceTypeEntry, String>)ResourceTypeEntry::setUnit);
		attributeGetterFunctions.put(
			"parentId", ResourceTypeEntry::getParentId);
		attributeSetterBiConsumers.put(
			"parentId",
			(BiConsumer<ResourceTypeEntry, Long>)
				ResourceTypeEntry::setParentId);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@Override
	public String getExternalReferenceCode() {
		if (_externalReferenceCode == null) {
			return "";
		}
		else {
			return _externalReferenceCode;
		}
	}

	@Override
	public void setExternalReferenceCode(String externalReferenceCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_externalReferenceCode = externalReferenceCode;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalExternalReferenceCode() {
		return getColumnOriginalValue("externalReferenceCode");
	}

	@Override
	public long getResourceTypeId() {
		return _resourceTypeId;
	}

	@Override
	public void setResourceTypeId(long resourceTypeId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_resourceTypeId = resourceTypeId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@Override
	public long getAccountId() {
		return _accountId;
	}

	@Override
	public void setAccountId(long accountId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_accountId = accountId;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getBusinessId() {
		return _businessId;
	}

	@Override
	public void setBusinessId(long businessId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessId = businessId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalBusinessId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("businessId"));
	}

	@Override
	public long getModifiedId() {
		return _modifiedId;
	}

	@Override
	public void setModifiedId(long modifiedId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedId = modifiedId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return "";
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_name = name;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalName() {
		return getColumnOriginalValue("name");
	}

	@Override
	public String getUnit() {
		if (_unit == null) {
			return "";
		}
		else {
			return _unit;
		}
	}

	@Override
	public void setUnit(String unit) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_unit = unit;
	}

	@Override
	public Long getParentId() {
		return _parentId;
	}

	@Override
	public void setParentId(Long parentId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_parentId = parentId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public Long getOriginalParentId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("parentId"));
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(ResourceTypeEntry.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), ResourceTypeEntry.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ResourceTypeEntry toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, ResourceTypeEntry>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ResourceTypeEntryImpl resourceTypeEntryImpl =
			new ResourceTypeEntryImpl();

		resourceTypeEntryImpl.setUuid(getUuid());
		resourceTypeEntryImpl.setExternalReferenceCode(
			getExternalReferenceCode());
		resourceTypeEntryImpl.setResourceTypeId(getResourceTypeId());
		resourceTypeEntryImpl.setGroupId(getGroupId());
		resourceTypeEntryImpl.setCompanyId(getCompanyId());
		resourceTypeEntryImpl.setAccountId(getAccountId());
		resourceTypeEntryImpl.setCreateDate(getCreateDate());
		resourceTypeEntryImpl.setModifiedDate(getModifiedDate());
		resourceTypeEntryImpl.setBusinessId(getBusinessId());
		resourceTypeEntryImpl.setModifiedId(getModifiedId());
		resourceTypeEntryImpl.setName(getName());
		resourceTypeEntryImpl.setUnit(getUnit());
		resourceTypeEntryImpl.setParentId(getParentId());

		resourceTypeEntryImpl.resetOriginalValues();

		return resourceTypeEntryImpl;
	}

	@Override
	public ResourceTypeEntry cloneWithOriginalValues() {
		ResourceTypeEntryImpl resourceTypeEntryImpl =
			new ResourceTypeEntryImpl();

		resourceTypeEntryImpl.setUuid(
			this.<String>getColumnOriginalValue("uuid_"));
		resourceTypeEntryImpl.setExternalReferenceCode(
			this.<String>getColumnOriginalValue("externalReferenceCode"));
		resourceTypeEntryImpl.setResourceTypeId(
			this.<Long>getColumnOriginalValue("resourceTypeId"));
		resourceTypeEntryImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		resourceTypeEntryImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		resourceTypeEntryImpl.setAccountId(
			this.<Long>getColumnOriginalValue("accountId"));
		resourceTypeEntryImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		resourceTypeEntryImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		resourceTypeEntryImpl.setBusinessId(
			this.<Long>getColumnOriginalValue("businessId"));
		resourceTypeEntryImpl.setModifiedId(
			this.<Long>getColumnOriginalValue("modifiedId"));
		resourceTypeEntryImpl.setName(
			this.<String>getColumnOriginalValue("name"));
		resourceTypeEntryImpl.setUnit(
			this.<String>getColumnOriginalValue("unit"));
		resourceTypeEntryImpl.setParentId(
			this.<Long>getColumnOriginalValue("parentId"));

		return resourceTypeEntryImpl;
	}

	@Override
	public int compareTo(ResourceTypeEntry resourceTypeEntry) {
		long primaryKey = resourceTypeEntry.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof ResourceTypeEntry)) {
			return false;
		}

		ResourceTypeEntry resourceTypeEntry = (ResourceTypeEntry)object;

		long primaryKey = resourceTypeEntry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<ResourceTypeEntry> toCacheModel() {
		ResourceTypeEntryCacheModel resourceTypeEntryCacheModel =
			new ResourceTypeEntryCacheModel();

		resourceTypeEntryCacheModel.uuid = getUuid();

		String uuid = resourceTypeEntryCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			resourceTypeEntryCacheModel.uuid = null;
		}

		resourceTypeEntryCacheModel.externalReferenceCode =
			getExternalReferenceCode();

		String externalReferenceCode =
			resourceTypeEntryCacheModel.externalReferenceCode;

		if ((externalReferenceCode != null) &&
			(externalReferenceCode.length() == 0)) {

			resourceTypeEntryCacheModel.externalReferenceCode = null;
		}

		resourceTypeEntryCacheModel.resourceTypeId = getResourceTypeId();

		resourceTypeEntryCacheModel.groupId = getGroupId();

		resourceTypeEntryCacheModel.companyId = getCompanyId();

		resourceTypeEntryCacheModel.accountId = getAccountId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			resourceTypeEntryCacheModel.createDate = createDate.getTime();
		}
		else {
			resourceTypeEntryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			resourceTypeEntryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			resourceTypeEntryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		resourceTypeEntryCacheModel.businessId = getBusinessId();

		resourceTypeEntryCacheModel.modifiedId = getModifiedId();

		resourceTypeEntryCacheModel.name = getName();

		String name = resourceTypeEntryCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			resourceTypeEntryCacheModel.name = null;
		}

		resourceTypeEntryCacheModel.unit = getUnit();

		String unit = resourceTypeEntryCacheModel.unit;

		if ((unit != null) && (unit.length() == 0)) {
			resourceTypeEntryCacheModel.unit = null;
		}

		Long parentId = getParentId();

		if (parentId != null) {
			resourceTypeEntryCacheModel.parentId = parentId;
		}

		return resourceTypeEntryCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<ResourceTypeEntry, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<ResourceTypeEntry, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ResourceTypeEntry, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(ResourceTypeEntry)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<ResourceTypeEntry, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<ResourceTypeEntry, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ResourceTypeEntry, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((ResourceTypeEntry)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, ResourceTypeEntry>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private String _uuid;
	private String _externalReferenceCode;
	private long _resourceTypeId;
	private long _groupId;
	private long _companyId;
	private long _accountId;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _businessId;
	private long _modifiedId;
	private String _name;
	private String _unit;
	private Long _parentId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<ResourceTypeEntry, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((ResourceTypeEntry)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put(
			"externalReferenceCode", _externalReferenceCode);
		_columnOriginalValues.put("resourceTypeId", _resourceTypeId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("accountId", _accountId);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("businessId", _businessId);
		_columnOriginalValues.put("modifiedId", _modifiedId);
		_columnOriginalValues.put("name", _name);
		_columnOriginalValues.put("unit", _unit);
		_columnOriginalValues.put("parentId", _parentId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("externalReferenceCode", 2L);

		columnBitmasks.put("resourceTypeId", 4L);

		columnBitmasks.put("groupId", 8L);

		columnBitmasks.put("companyId", 16L);

		columnBitmasks.put("accountId", 32L);

		columnBitmasks.put("createDate", 64L);

		columnBitmasks.put("modifiedDate", 128L);

		columnBitmasks.put("businessId", 256L);

		columnBitmasks.put("modifiedId", 512L);

		columnBitmasks.put("name", 1024L);

		columnBitmasks.put("unit", 2048L);

		columnBitmasks.put("parentId", 4096L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private ResourceTypeEntry _escapedModel;

}