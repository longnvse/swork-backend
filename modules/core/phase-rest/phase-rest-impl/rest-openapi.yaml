components:
  schemas:
    Phase:
      description: Phase Model
      properties:
        id:
          format: int64
          type: integer
          readOnly: true
        externalReferenceCode:
          type: string
          readOnly: true
        projectId:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        status:
          enum: [ active, inactive ]
        manages:
          type: array
          items:
            type: integer
            format: int64
          writeOnly: true
        phaseManages:
          type: array
          items:
            $ref: "#/components/schemas/PhaseManage"
          readOnly: true
        progress:
          format: int64
          type: integer
          readOnly: true
        projectName:
          type: string
          readOnly: true
    PhaseManage:
      description: PhaseManage Model
      properties:
        id:
          format: int64
          type: integer
          readOnly: true
        phaseId:
          format: int64
          type: integer
          readOnly: true
        accountId:
          format: int64
          type: integer
        accountName:
          type: string
          readOnly: true
info:
  description: "PhaseRest REST API"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  title: "PhaseRest"
  version: v1.0
openapi: 3.0.1

paths:
  "/phases":
    post:
      tags: [ "Phase" ]
      description: Create a new Phase
      operationId: postPhase
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Phase"
          application/xml:
            schema:
              $ref: "#/components/schemas/Phase"
      responses:
        204:
          description:
            "Phase was created"
          content:
            application/json: { }
            application/xml: { }
  "/phases/list/{projectId}":
    get:
      tags: [ "Phase" ]
      description:
        Retrieves the Phase. Results can be paginated, filtered, searched, and sorted.
      operationId: getPhasesPage
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
      responses:
        200:
          description: The data returned
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Phase"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Phase"
                type: array
  "/phases/{phaseId}":
    put:
      tags: [ "Phase" ]
      description: Update a Phase
      operationId: putPhase
      parameters:
        - in: path
          name: phaseId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Phase"
          application/xml:
            schema:
              $ref: "#/components/schemas/Phase"
      responses:
        204:
          description:
            "Phase was updated"
          content:
            application/json: { }
            application/xml: { }
    get:
      tags: [ "Phase" ]
      description: Get an Phase
      operationId: getPhase
      parameters:
        - in: path
          name: phaseId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          description:
            "Phase detail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Phase"
            application/xml:
              schema:
                $ref: "#/components/schemas/Phase"
    delete:
      tags: [ "Phase" ]
      description: Delete an Phase
      operationId: deletePhase
      parameters:
        - in: path
          name: phaseId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        204:
          description:
            "Phase was deleted"
          content:
            application/json: { }
            application/xml: { }
  "/phases/date/{phaseId}":
    put:
      tags: [ "Phase" ]
      description: Update a Phase
      operationId: updateDate
      parameters:
        - in: path
          name: phaseId
          required: true
          schema:
            format: int64
            type: integer
        - in: query
          name: startDate
          required: true
          schema:
            format: date
            type: string
        - in: query
          name: endDate
          required: true
          schema:
            format: date
            type: string
      responses:
        204:
          description:
            "Phase was updated"
          content:
            application/json: { }
            application/xml: { }