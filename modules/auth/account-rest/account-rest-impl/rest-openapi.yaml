components:
  schemas:
    Account:
      description: Account model
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        createDate:
          type: string
          format: date
          readOnly: true
        username:
          type: string
        fullName:
          type: string
        email:
          type: string
        phoneNumber:
          type: integer
        address:
          type: string
        password:
          type: string
          readOnly: true

    AccountPermision:
      description: AccountPermision model
      properties:
        id:
          format: int64
          type: integer
        permisionId:
          format: int64
          type: integer
        accountId:
          format: int64
          type: integer

    PermissionDetail:
      description: AccountPermission model
      properties:
        id:
          format: int64
          type: integer
        permissionId:
          format: int64
          type: integer
        actionCode:
          type: string

info:
  description: "AccountRest REST API"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  title: "AccountRest"
  version: v1.0
openapi: 3.0.1
paths:
  "/accounts":
    get:
      tags: [ "Account" ]
      description:
        Retrieves the account. Results can be paginated, filtered, searched, and sorted.
      operationId: getAccountsPage
      parameters:
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
      responses:
        200:
          description: The data returned
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Account"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Account"
                type: array
    post:
      tags: [ "Account" ]
      description: Create a new Account
      operationId: postAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
          application/xml:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        201:
          description:
            "Created an Account"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
            application/xml:
              schema:
                $ref: "#/components/schemas/Account"
  "/accounts/{accountId}":
    put:
      tags: [ "Account" ]
      description: Update an Account
      operationId: putAccount
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
          application/xml:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        200:
          description:
            "Updated an Account"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
            application/xml:
              schema:
                $ref: "#/components/schemas/Account"
    get:
      tags: [ "Account" ]
      description: Get an Account
      operationId: getAccount
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          description:
            "Get detail an Account"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
            application/xml:
              schema:
                $ref: "#/components/schemas/Account"



    delete:
      tags: [ "Account" ]
      description: Delete an account
      operationId: deleteAccount
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        204:
          description:
            "Deleted an Account"
          content:
            application/json: { }
            application/xml: { }

  "/get-action-code/{id}":
    get:
      operationId: getPermissionDetailById
      tags: [ "Account" ]
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: The data returned
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PermissionDetail"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/PermissionDetail"
                type: array

  "/account_permisions":
    get:
      tags: [ "AccountPermision" ]
      description:
        Retrieves the AccountPermision. Results can be paginated, filtered, searched, and sorted.
      operationId: getAccountPermisionsPage
      parameters:
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
      responses:
        200:
          description: The data returned
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AccountPermision"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/AccountPermision"
                type: array
    post:
      tags: [ "AccountPermision" ]
      description: Create a new AccountPermision
      operationId: postAccountPermision
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountPermision"
          application/xml:
            schema:
              $ref: "#/components/schemas/AccountPermision"
      responses:
        201:
          description:
            "Created an Account"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountPermision"
            application/xml:
              schema:
                $ref: "#/components/schemas/AccountPermision"

  "/account_permisions/{accountPermisionId}":
    delete:
      tags: [ "AccountPermision" ]
      description: Delete an accountPermision
      operationId: deleteAccountPermision
      parameters:
        - in: path
          name: accountPermisionId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        204:
          description:
            "Deleted an AccountPermision"
          content:
            application/json: { }
            application/xml: { }


