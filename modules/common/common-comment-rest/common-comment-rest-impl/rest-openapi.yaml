components:
  schemas:
    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        content:
          type: string
        parentId:
          type: integer
          format: int64
          writeOnly: true
        classPkId:
          type: integer
          format: int64
          writeOnly: true
        classPkName:
          type: string
          enum: [ project, phase, work ]
          writeOnly: true
        creatorId:
          type: integer
          format: int64
          readOnly: true
        creatorName:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
          readOnly: true
        avatar:
          type: string
          readOnly: true
        comments:
          type: array
          items:
            $ref: "#/components/schemas/Comment"
info:
  description: "CommonCommentRest REST API"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  title: "CommonCommentRest"
  version: v1.0
openapi: 3.0.1
paths:
  "/comments":
    get:
      tags: [ "Comment" ]
      description:
        Retrieves the Comment. Results can be paginated, filtered, searched, and sorted.
      operationId: getCommentPages
      parameters:
        - in: query
          name: classPkId
          schema:
            type: integer
            format: int64
          required: true
        - in: query
          name: classPkName
          schema:
            type: string
            enum: [ project, phase, work ]
          required: true
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
      responses:
        200:
          description: The data returned
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Comment"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Comment"
                type: array
    post:
      tags: [ "Comment" ]
      description: Create a new Comment
      operationId: postComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comment"
          application/xml:
            schema:
              $ref: "#/components/schemas/Comment"
      responses:
        204:
          description:
            "Created an Comment"
          content:
            application/json: {}
            application/xml: {}
  "/comments/{commentId}":
    put:
      tags: [ "Comment" ]
      description: Update an Comment
      operationId: putComment
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comment"
          application/xml:
            schema:
              $ref: "#/components/schemas/Comment"
      responses:
        204:
          description:
            "Updated an Comment"
          content:
            application/json: {}
            application/xml: {}
    get:
      tags: [ "Comment" ]
      description: Get an Comment
      operationId: getComment
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          description:
            "Get detail an Comment"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
            application/xml:
              schema:
                $ref: "#/components/schemas/Comment"
    delete:
      tags: [ "Comment" ]
      description: Delete an Comment
      operationId: deleteComment
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        204:
          description:
            "Deleted an Comment"
          content:
            application/json: { }
            application/xml: { }