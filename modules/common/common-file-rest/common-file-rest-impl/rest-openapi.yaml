components:
    schemas:
        Metadata:
            description: Metadata model
            properties:
                moduleId:
                    type: string
                    example: "HRM"
                appId:
                    type: string
                    example: "EMPLOYEE"
            type: object

        FileRes:
            description: File model
            properties:
                id:
                    format: int64
                    readOnly: true
                    type: integer
                fileName:
                    readOnly: true
                    type: string
                fileSize:
                    readOnly: true
                    type: string
                mimeType:
                    readOnly: true
                    type: string
                metadata:
                    allOf:
                        - $ref: "#/components/schemas/Metadata"

        FileUpdate:
            type: object
            properties:
                url:
                    type: string
                size:
                    type: integer
                    format: int64
                    readOnly: true

        FileData:
            description: File Preview
            properties:
                id:
                    format: int64
                    readOnly: true
                    type: integer
                fileType:
                    type: string
                type:
                    type: string
                title:
                    type: string
                key:
                    type: string
                url:
                    type: string
                documentType:
                    type: string
                data:
                    type: string
                    format: binary
                size:
                    type: integer
                    format: int64

        FileManager:
            description: upload file
            properties:
                fileId:
                    description: id of the file in the dlfileentry table.
                    type: integer
                    format: int64
                parentCode:
                    type: string
                fileType:
                    type: string
                    readOnly: true
                type:
                    type: string
                pkType:
                    type: string
                fileName:
                    type: string
                    readOnly: true
                fileSize:
                    type: string
                    readOnly: true
                mineType:
                    type: string
                    readOnly: true
                metadata:
                    allOf:
                        - $ref: "#/components/schemas/Metadata"

        DocumentBrief:
            properties:
                id:
                    type: integer
                    format: int64
                name:
                    type: string
                category:
                    type: string
                documentBriefs:
                    type: array
                    items:
                        $ref: "#/components/schemas/DocumentBrief"


info:
    description: "FilesManagerRest REST API"
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: "FilesManagerRest"
    version: v2.0
openapi: 3.0.1

paths:
    /files:
        post:
            tags:
                - Files
            operationId: postFile
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                metadata:
                                    $ref: "#/components/schemas/Metadata"
                                file:
                                    format: binary
                                    type: string
                required: true

            responses:
                200:
                    description:
                        "File"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/FileRes"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/FileRes"
    /files/{fileId}:
        get:
            tags:
                - Files
            operationId: getFileById
            parameters:
                - in: path
                  explode: false
                  name: fileId
                  required: true
                  schema:
                      description:
                          The resource Id
                      example: 30130
                      format: int64
                      minimum: 0
                      type: integer
                  style: simple
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/FileData"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/FileData"
                    description: "getFileReview"
        put:
            tags:
                - Files
            operationId: updateFile
            parameters:
                - in: path
                  explode: false
                  name: fileId
                  required: true
                  schema:
                      description:
                          The resource Id
                      example: 30130
                      format: int64
                      minimum: 0
                      type: integer
                  style: simple
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/FileUpdate"

                    application/xml:
                        schema:
                            $ref: "#/components/schemas/FileUpdate"

            responses:
                200:
                    description:
                        "File"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/FileUpdate"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/FileUpdate"

    "/file-managers":
        post:
            operationId: postFileManager
            summary: Add new File Manager

            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/FileManager"

                    application/xml:
                        schema:
                            $ref: "#/components/schemas/FileManager"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/FileManager"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/FileManager"
                    description: ""
            tags: [ "FileManager" ]

        get:
            operationId: getAllFileManager
            summary: Get list Media File
            description: Retrieves the Media File . Results can be paginated, filtered, searched, and sorted.
            tags: [ "FileManager" ]
            parameters:


                - in: query
                  name: parentCode
                  description: class parent name
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: A paged array of file manager
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/FileManager"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/FileManager"
                                type: array

    "/file-managers/{fileId}":
        delete:
            operationId: deleteFileManager
            summary: delete new File Manager
            parameters:
                - name: fileId
                  in: path
                  required: true
                  schema:
                      type: integer
                      format: int64

            responses:
                204:
                    content:
                        application/json: { }
                        application/xml: { }
                    description: ""
            tags: [ "FileManager" ]
        get:
            operationId: getFileManager
            summary: Get File Manager
            parameters:
                - in: path
                  name: fileId
                  description: File ID
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/FileManager"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/FileManager"
                    description: ""

            tags: [ "FileManager" ]
    "/file-managers/delete-parrent":
        delete:
            operationId: deleteMediaFiles
            summary: Delete dad id Media file by ID
            parameters:

                - in: query
                  name: parentCode
                  description: class parent name
                  required: true
                  schema:
                      type: string

            responses:
                204:
                    content:
                        application/json: { }
                        application/xml: { }
                    description: ""
            tags: [ "FileManager" ]
