components:
  schemas:
    Metadata:
      description: Metadata model
      properties:
        moduleId:
          type: string
          example: "PROJECT"
        appId:
          type: string
          example: "PROJECT"
      type: object

    FileManager:
      description: upload file
      properties:
        fileId:
          description: id of the file in the dlfileentry table.
          type: integer
          format: int64
        parentCode:
          type: string
        fileType:
          type: string
          readOnly: true
        fileName:
          type: string
          readOnly: true
        fileSize:
          type: string
          readOnly: true
        mineType:
          type: string
          readOnly: true
        metadata:
          allOf:
            - $ref: "#/components/schemas/Metadata"


info:
  description: "FilesManagerRest REST API"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  title: "FilesManagerRest"
  version: v2.0
openapi: 3.0.1

paths:
  /files:
    post:
      tags:
        - FileManager
      operationId: postFile
      parameters:
        - in: query
          name: classPkId
          schema:
            type: integer
            format: int64
          required: true
        - in: query
          name: classPkName
          schema:
            type: string
            enum: [ project, phase,work ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  format: binary
                  type: string
        required: true
      responses:
        200:
          description:
            "File"
          content:
            application/json: { }
            application/xml: { }
  "/file-managers":
    get:
      operationId: getAllFileManager
      summary: Get list Media File
      description: Retrieves the Media File . Results can be paginated, filtered, searched, and sorted.
      tags: [ "FileManager" ]
      parameters:


        - in: query
          name: parentCode
          description: class parent name
          required: true
          schema:
            type: string
      responses:
        200:
          description: A paged array of file manager
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FileManager"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/FileManager"
                type: array

  "/file-managers/{fileId}":
    delete:
      operationId: deleteFileManager
      summary: delete new File Manager
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        204:
          content:
            application/json: { }
            application/xml: { }
          description: ""
      tags: [ "FileManager" ]
