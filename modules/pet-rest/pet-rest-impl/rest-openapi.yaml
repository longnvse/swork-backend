components:
  schemas:
    Pet:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: integer
          format: int64

info:
  description: "PetRest REST API"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  title: "PetRest"
  version: v1.0
openapi: 3.0.1

paths:
  "/pets":
    get:
      operationId: getPets
      tags: [ "Pet" ]
      responses:
        200:
          description: "Get List Pet"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
    post:
      operationId: postPet
      tags: [ "Pet" ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/xml:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        200:
          description: "Create a Pet"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
  "/pets/{petId}":
    get:
      operationId: getPet
      tags: [ "Pet" ]
      parameters:
        - name: petId
          in: path
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: "Get Pet by Id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'

    put:
      operationId: putPet
      tags: [ "Pet" ]
      parameters:
        - name: petId
          in: path
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/xml:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        200:
          description: "Update a Pet"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
    delete:
      operationId: deletePet
      tags: [ "Pet" ]
      parameters:
        - name: petId
          in: path
          schema:
            type: integer
            format: int64
          required: true
      responses:
        204:
          description: "Delete a Pet"
          content:
            application/json: { }
            application/xml: { }